;---------------------------------------;
; Simulate spread of disease            ;
;---------------------------------------;
; Compile with                          ;
;                                       ;
; uasm -win64 diseases_spread.asm       ;
; ld diseases_spread.o                  ;
;---------------------------------------;
;=======================================;
; Macros                                ;
;=======================================;
;---------------------------------------;
; @@@@@@@                               ;
; RawPrint                              ;
;---------------------------------------;
RawPrint MACRO ptr, len                 ;
    MOV rax, 4                          ;
    MOV rbx, 1                          ;
    MOV rcx, ptr                        ;
    MOV rdx, len                        ;
    INT 80H                             ;
ENDM                                    ;
;---------------------------------------;
BSS SEGMENT                             ;
    prevGenHealthy DD 03f4CCCCDH?       ;
    curGenHealthy DD ?                  ;
    iteration DB 0                      ;
    coeff DD 1                          ;
BSS ENDS                                ;
                                        ;
;---------------------------------------;
DATA SEGMENT                            ;
    ;- control sequences for changing the colors of graphs
    greenText DB 1BH, "[32;40;5m"       ;
    greenTextLen EQU $ - greenText      ;
    ;                                   ;
    redText DB 1BH, "[31;40;1m"         ;
    redtextLen EQU $ - redText          ;
    ;- Different texts to print out     ;
    greeter DB "Simulate the spread of a disease - Displayed in a graphical format", 0AH, "2023, Maximilian Wittmer", 0AH
    greeterLen EQU $ - greeter          ;
DATA ENDS                               ;
                                        ;
;---------------------------------------;
TEXT SEGMENT                            ;
;---------------------------------------;
; _start                                ;
;---------------------------------------;
PUBLIC _start                           ;
_start PROC                             ;
    ;- prints the greeter               ;
    RawPrint OFFSET greenText, greenTextLen
    RawPrint OFFSET greeter, greeterLen ;
    ;- init                             ;
    ;- executes                         ;
    MOV rax, 1                          ;
    XOR rbx, rbx                        ;
    INT 80H                             ;
_start ENDP                             ;
                                        ;
                                        ;
;---------------------------------------;
TEXT ENDS                               ;
                                        ;
                                        ;
END
